{"ast":null,"code":"var _jsxFileName = \"D:\\\\Templeate's\\\\Netflix\\\\netflix\\\\src\\\\Components\\\\Childmov.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from \"react\";\nimport { childData } from \"../Utils/database\";\nimport \"../Style/weekend.css\";\nimport Childcards from \"./Childcards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Childmov(props) {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setData(childData);\n  }, []);\n  useEffect(() => {\n    let arr = [];\n    if (props.search === \"\") {\n      arr = childData;\n    } else {\n      let word = props.search.toUpperCase().split(\"\");\n      childData.map(val => {\n        let test = val.Name.toUpperCase().split(\"\");\n        let match = true;\n        for (let i = 0; i < word.length; i++) {\n          if (word[i] !== test[i]) {\n            match = false;\n          }\n        }\n        if (match) {\n          arr.push(val);\n        }\n      });\n      console.log(arr);\n      setData(arr);\n    }\n  }, [props.search]);\n  useEffect(() => {\n    // console.log(props);\n    let arr = [];\n    childData.map(val => {\n      if (val.language === props.lang) {\n        arr.push(val);\n      }\n    });\n    setData(arr);\n  }, [props.lang]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekendWrapper2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekendMain2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekendArea2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weekendMov2\",\n          children: data.map(elem => {\n            return /*#__PURE__*/_jsxDEV(Childcards, {\n              wkndhead: elem.weekendhead,\n              wkndcrt: elem.weekendCreator,\n              wkndcst: elem.weekendCast,\n              wkndgnrs: elem.weekendGenres,\n              wkndshowis: elem.weekendShowis,\n              wkndrtng: elem.weekendRate,\n              wkndtime: elem.weekendTime,\n              wkndage: elem.weekendAge,\n              wkndyear: elem.weekendYear,\n              wkndqual: elem.weekendQual,\n              wkndhd: elem.weekendDh,\n              wkndpr: elem.weekendDpara,\n              week: elem.weekMov,\n              elem: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Childmov, \"aQQ7hVo58d/kJCPXJoQQg2iT8Os=\");\n_c = Childmov;\nexport default Childmov;\nvar _c;\n$RefreshReg$(_c, \"Childmov\");","map":{"version":3,"names":["React","Component","useEffect","useState","childData","Childcards","Childmov","props","data","setData","arr","search","word","toUpperCase","split","map","val","test","Name","match","i","length","push","console","log","language","lang","elem","weekendhead","weekendCreator","weekendCast","weekendGenres","weekendShowis","weekendRate","weekendTime","weekendAge","weekendYear","weekendQual","weekendDh","weekendDpara","weekMov"],"sources":["D:/Templeate's/Netflix/netflix/src/Components/Childmov.jsx"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport { childData } from \"../Utils/database\";\r\nimport \"../Style/weekend.css\";\r\nimport Childcards from \"./Childcards\";\r\n\r\nfunction Childmov(props) {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    setData(childData);\r\n  }, []);\r\n  useEffect(() => {\r\n    let arr = [];\r\n    if (props.search === \"\") {\r\n      arr = childData;\r\n    } else {\r\n      let word = props.search.toUpperCase().split(\"\");\r\n      childData.map((val) => {\r\n        let test = val.Name.toUpperCase().split(\"\");\r\n        let match = true;\r\n        for (let i = 0; i < word.length; i++) {\r\n          if (word[i] !== test[i]) {\r\n            match = false;\r\n          }\r\n        }\r\n        if (match) {\r\n          arr.push(val);\r\n        }\r\n      });\r\n      console.log(arr);\r\n      setData(arr);\r\n    }\r\n  }, [props.search]);\r\n  useEffect(() => {\r\n    // console.log(props);\r\n    let arr = [];\r\n    childData.map((val) => {\r\n      if (val.language === props.lang) {\r\n        arr.push(val);\r\n      }\r\n    });\r\n    setData(arr);\r\n  }, [props.lang]);\r\n  return (\r\n    <div className=\"weekendWrapper2\">\r\n      <div className=\"weekendMain2\">\r\n        <div className=\"weekendArea2\">\r\n          <div className=\"weekendMov2\">\r\n            {data.map((elem) => {\r\n              return (\r\n                <Childcards\r\n                  wkndhead={elem.weekendhead}\r\n                  wkndcrt={elem.weekendCreator}\r\n                  wkndcst={elem.weekendCast}\r\n                  wkndgnrs={elem.weekendGenres}\r\n                  wkndshowis={elem.weekendShowis}\r\n                  wkndrtng={elem.weekendRate}\r\n                  wkndtime={elem.weekendTime}\r\n                  wkndage={elem.weekendAge}\r\n                  wkndyear={elem.weekendYear}\r\n                  wkndqual={elem.weekendQual}\r\n                  wkndhd={elem.weekendDh}\r\n                  wkndpr={elem.weekendDpara}\r\n                  week={elem.weekMov}\r\n                  elem={elem}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Childmov;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}